worker_processes  1;

events { worker_connections 1024; }

http {
  sendfile on;
  client_max_body_size 50m;

  # Necesario para WebSocket/Upgrade
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream api_upstream { server api:3000; }
  upstream ia_upstream  { server ia:8000; }
  upstream minio_api    { server minio:9000; }
  upstream minio_ui     { server minio:9001; }

  server {
    listen 80;
    server_name _;

    # --- STATIC FRONTEND ---
    root /usr/share/nginx/html;
    index login.html;

    # Sirve archivos tal cual: /login.html, /jefe_taller_dashboard.html, etc.
    location ~* \.(html|css|js|png|jpg|svg|ico|json)$ {
      try_files $uri =404;
      add_header Cache-Control "no-store";
    }

    # Página raíz -> login
    location = / {
      try_files /login.html =404;
    }
    
    # API NestJS
    location /api/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://api_upstream;
    }

    # IA FastAPI
    location /ia/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://ia_upstream;    # <- SIN slash
    }

    # Consola MinIO -> redirige a puerto directo (dev)
    location /minio/ {
        return 302 http://localhost:9001/;
    }

    # --- MinIO S3 API en /s3 ---
    location /s3/ {
      proxy_http_version 1.1;
      proxy_buffering off;
      rewrite ^/s3/(.*)$ /$1 break;
      proxy_pass http://minio_api;
    }

    location / { return 200 'Proxy OK. Usa /api, /ia, /s3 (consola en :9001)'; add_header Content-Type text/plain; }
    }
}