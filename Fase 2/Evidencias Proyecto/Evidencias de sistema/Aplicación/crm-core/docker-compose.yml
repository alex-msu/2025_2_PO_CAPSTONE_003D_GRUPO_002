version: "3.9"

name: ${PROJECT_NAME}

services:
  postgres:
    image: postgres:15
    container_name: ${PROJECT_NAME}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  minio:
    image: minio/minio:latest
    container_name: ${PROJECT_NAME}-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      TZ: ${TZ}
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio:/data

  minio-init:
    image: minio/mc:latest
    container_name: ${PROJECT_NAME}-minio-init
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    command: >
      "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${MINIO_BUCKET} || true &&
      mc anonymous set none local/${MINIO_BUCKET}
      "
    restart: "no"

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_BUCKET: ${MINIO_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      TZ: ${TZ}
    ports:
      - "${API_PORT}:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started

  worker:
    build:
      context: ./apps/worker
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-worker
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: http://minio:9000
      MINIO_BUCKET: ${MINIO_BUCKET}
      TZ: ${TZ}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started

  ia:
    build:
      context: ./apps/ia
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}-ia
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${IA_PORT}:8000"

  proxy:
    image: nginx:1.27-alpine
    container_name: ${PROJECT_NAME}-proxy
    depends_on:
      - api
      - ia
      - minio
    ports:
      - "${NGINX_HTTP_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/static:/usr/share/nginx/html:ro
    restart: unless-stopped

volumes:
  pgdata:
  minio:
